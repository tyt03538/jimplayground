{
   "AWSTemplateFormatVersion": "2010-09-09",

   "Description": "Creates an API gateway that's backed by a Lambda function",

   "Parameters": {
      "LambdaCodeBucket": {
         "Description": "Name of the S3 bucket that's storing the Lamba function's zip file",
         "Type": "String"
      },
      "LambdaCodePath": {
         "Description": "Path to the zip file of code for the Lambda function",
         "Type": "String"
      },
      "CacheClusterNodes": {
         "Description": "Number of nodes to run in the cache cluster",
         "Type": "Number",
         "Default": "1",
         "MinValue": "1",
         "MaxValue": "10000"
      },
      "CacheClusterNodeType": {
         "Description": "Type of node to deploy (e.g. 'cache.t2.micro', which is the default)",
         "Type": "String",
         "Default": "cache.t2.micro"
      },
      "CacheClusterSubnetGroupName": {
         "Description": "The subnet group to deploy the cache cluster to",
         "Type": "String",
         "Default": "default"
      },
      "VPCSecurityGroupIDs": {
         "Description": "An comma-delimited list of strings - the security groups that your Lambda function and cache cluster should be in",
         "Type": "CommaDelimitedList"
      },
      "VPCSubnetIDs": {
         "Description": "An comma-delimited list of strings - the subnet IDs that your Lambda function should be assigned to",
         "Type": "CommaDelimitedList"
      }
   },

   "Resources": {
      "BackingLambdaFunction": {
         "Type": "AWS::Lambda::Function",
         "Properties": {
            "Code": {
               "S3Bucket": { "Ref": "LambdaCodeBucket" },
               "S3Key": { "Ref": "LambdaCodePath" }
            },
            "FunctionName": { "Fn::Join": [ "-", [ { "Ref": "AWS::StackName" }] ] },
            "Handler": "index.handler",
            "MemorySize": "128",
            "Environment": {
              "Variables": {
                "WINDOW_SIZE": 600000,
                "REDIS_KEY": "voteStream",
                "REDIS_URL": "To Be Updated"
              }
            },
            "Role": { "Fn::GetAtt": [ "BackingLambdaExecutionRole", "Arn" ] },
            "VpcConfig": {
               "SecurityGroupIds": { "Ref": "VPCSecurityGroupIDs" },
               "SubnetIds": { "Ref": "VPCSubnetIDs" }
            },
            "Runtime": "nodejs4.3",
            "Timeout": "3"
         }
      },
      "BackingLambdaInvokePermission": {
         "Type": "AWS::Lambda::Permission",
         "Properties": {
            "FunctionName": { "Fn::GetAtt": [ "BackingLambdaFunction", "Arn" ] },
            "Action": "lambda:InvokeFunction",
            "Principal": "apigateway.amazonaws.com"
         }
      },
      "BackingLambdaExecutionRole": {
         "Type": "AWS::IAM::Role",
         "Properties": {
            "AssumeRolePolicyDocument": {
               "Version": "2012-10-17",
               "Statement": [
                  {
                     "Effect": "Allow",
                     "Principal": {
                        "Service": [ "lambda.amazonaws.com" ]
                     },
                     "Action": [ "sts:AssumeRole" ]
                  }
               ]
            },
            "ManagedPolicyArns": [
              "arn:aws:iam::aws:policy/AmazonVPCFullAccess",
              "arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess",
              "arn:aws:iam::aws:policy/CloudWatchFullAccess"
            ]
         }
      },
      "ElastiCacheCluster": {
         "Type": "AWS::ElastiCache::CacheCluster",
         "Properties": {
            "AutoMinorVersionUpgrade": true,
            "CacheNodeType": { "Ref": "CacheClusterNodeType" },
            "CacheSubnetGroupName": { "Ref": "CacheClusterSubnetGroupName" },
            "Engine": "redis",
            "NumCacheNodes": { "Ref": "CacheClusterNodes" },
            "VpcSecurityGroupIds": { "Ref": "VPCSecurityGroupIDs" }
         }
      }
    },

   "Outputs": {
      "LambdaName": {
         "Value": { "Ref": "BackingLambdaFunction" },
         "Description": "The Lambda function"
      },
      "ElastiCacheCluster": {
         "Value": { "Ref": "ElastiCacheCluster" },
         "Description": "The ElastiCacheCluster"
      }
   }
}
